import streamlit as st
import pandas as pd


st.markdown(
    """
    <style>
    .stApp {
        background-color: seashell;
    }
    </style>
    """,
    unsafe_allow_html=True
)



# Cargar base de datos
@st.cache_data
def load_data():
    return pd.read_csv("tabla_vih_corregida(112).csv", encoding="latin1")

df = load_data()

# Men√∫ principal
menu = st.sidebar.selectbox("Ir a:", ["Inicio", "Datos Duros", "Conoce nuestra propuesta"])

# -------------------
# SECCI√ìN DE INICIO
# -------------------
if menu == "Inicio":
    st.title("Rompe el silencio. Datos que salvan vidas.")
    st.header("VIH en M√©xico")

    st.subheader("Introducci√≥n te√≥rica")
    st.text(
    "En M√©xico, hablar del VIH sigue siendo un tab√∫. Esta p√°gina busca generar "
    "concientizaci√≥n y verbalizaci√≥n sobre la importancia de conocer esta problem√°tica. "
    "¬øPor qu√© es importante hablar del VIH? Porque informar salva vidas."
)
    st.subheader("Imagen")
    st.image("Imagencanvavih.jpg", caption="Campa√±a de concientizaci√≥n", use_container_width=True)

    st.subheader("Video")
    st.video("https://youtu.be/l23Xi5Y2omI?si=bybilQpwn0afwMdi")

    st.subheader("Registro")
    st.text("Reg√≠strate para recibir actualizaciones y noticias sobre el VIH en M√©xico.")

    nombre = st.text_input("Ingresa tu nombre:")
    if st.button("Registrarme"):
        if nombre.strip():
            st.success(f"Gracias por registrarte, {nombre}.")
        else:
            st.warning("Por favor, escribe tu nombre.")

# --------------------------
# SECCI√ìN DE DATOS DUROS
# --------------------------
elif menu == "Datos Duros":
    st.title("Datos Duros sobre VIH en M√©xico")

    opcion = st.sidebar.selectbox("Selecciona un an√°lisis:", [
        "Casos por sexo",
        "Casos por edad",
        "Casos y Seguro Social",
        "Resistencia a los medicamentos",
        "Edad vs Carga viral",
        "Mapa ilustrativo"
    ])

    if opcion == "Casos por sexo":
        st.subheader("Distribuci√≥n de casos por sexo")
        conteo_sexo = df["sexo"].value_counts()
        st.bar_chart(conteo_sexo)

        st.subheader("Interpretaci√≥n")
        st.text("La gr√°fica muestra que la mayor√≠a de los casos se concentran en hombres cis, con una cifra muy superior al resto de los grupos. Las mujeres cis presentan una cantidad considerablemente menor, y los casos en personas trans (tanto hombres como mujeres) son significativamente bajos. Esta distribuci√≥n sugiere una posible sobrerrepresentaci√≥n en hombres cis, pero tambi√©n podr√≠a reflejar subregistro o barreras en el acceso al diagn√≥stico en poblaciones trans.")

        st.subheader("Tabla filtrable")
        filtro_sexo = st.selectbox("Filtrar por sexo:", df["sexo"].unique())
        tabla_filtrada = df[df["sexo"] == filtro_sexo]
        st.dataframe(tabla_filtrada)
        
    elif opcion == "Casos por edad":
        st.subheader("Distribuci√≥n de casos por edad")
        edades = df["edad"].value_counts().sort_index()
        st.line_chart(edades)

        st.subheader("Interpretaci√≥n")
        st.text("La gr√°fica muestra que la mayor√≠a de los casos de VIH en M√©xico se concentran entre los 20 y 35 a√±os de edad, con un pico claro alrededor de los 25 a 30 a√±os. A partir de los 35 a√±os, la incidencia disminuye progresivamente, lo que sugiere que la poblaci√≥n joven-adulta es la m√°s afectada por esta enfermedad. Esta tendencia resalta la importancia de enfocar campa√±as de prevenci√≥n y detecci√≥n en personas en edad reproductiva y sexualmente activa.")

        st.subheader("Tabla filtrable")
        edades_unicas = sorted(df["edad"].dropna().unique())
        filtro_edad = st.selectbox("Filtrar por edad:", edades_unicas)
        tabla_filtrada_edad = df[df["edad"] == filtro_edad]
        st.dataframe(tabla_filtrada_edad)
        
    elif opcion == "Casos y Seguro Social":
        st.subheader("Distribuci√≥n por tipo de seguridad social")

    # Filtrar los valores no deseados
        df_seguridad = df

    # Gr√°fica
        conteo_seguridad = df_seguridad["seguridad_social"].value_counts()
        st.bar_chart(conteo_seguridad)

    # Interpretaci√≥n
        st.subheader("Interpretaci√≥n")
        st.text("La mayor√≠a de las personas diagnosticadas con VIH reportan no tener acceso a un sistema de seguridad social. "
            "Esto puede reflejar condiciones de vulnerabilidad, menor acceso a servicios m√©dicos o "
            "precariedad en el seguimiento del tratamiento. Tambi√©n sugiere la importancia de fortalecer "
            "servicios p√∫blicos de salud para poblaciones sin afiliaci√≥n.")

    # Tabla filtrable
        st.subheader("Tabla filtrable")
        opciones_seguridad = sorted(df_seguridad["seguridad_social"].dropna().unique())
        filtro_seguridad = st.selectbox("Filtrar por seguridad social:", opciones_seguridad)
        tabla_filtrada_seguridad = df_seguridad[df_seguridad["seguridad_social"] == filtro_seguridad]
        st.dataframe(tabla_filtrada_seguridad)
        
    elif opcion == "Resistencia a los medicamentos":
        st.subheader("Distribuci√≥n por tipo de resistencia")

    # Filtrar los casos v√°lidos (excluyendo 'Pendiente' y valores vac√≠os)
        resistencia_filtrada = df[df["resistencia"].isin(["NNRTI", "NRTI", "PI", "INSTI", "Compleja", "Susceptible"])]
        conteo_resistencia = resistencia_filtrada["resistencia"].value_counts()
        st.bar_chart(conteo_resistencia)

    # Interpretaci√≥n
        st.subheader("Interpretaci√≥n")
        st.text("La mayor√≠a de los casos con resistencia detectada corresponden a la categor√≠a NNRTI.\n"
            "Esto sugiere una alta exposici√≥n o falla terap√©utica asociada a este tipo de medicamentos.\n"
            "La presencia de otros tipos como NRTI, PI o INSTI puede indicar un historial de tratamientos complejos.\n"
            "La informaci√≥n es clave para ajustar esquemas terap√©uticos eficaces.")

    # Tabla filtrable
        st.subheader("Tabla filtrable")
        tipos_resistencia = sorted([r for r in df["resistencia"].dropna().unique() if r != "Pendiente"])
        filtro_resistencia = st.selectbox("Filtrar por tipo de resistencia:", tipos_resistencia)
        tabla_filtrada_resistencia = df[df["resistencia"] == filtro_resistencia]
        st.dataframe(tabla_filtrada_resistencia)
        
    elif opcion == "Edad vs Carga viral":
        st.subheader("Relaci√≥n entre edad y carga viral")

    # Filtrar datos v√°lidos
        datos_validos = df[df["carga_viral"] >= 0]

    # Agrupar por edad y calcular promedio de carga viral
        agrupado = datos_validos.groupby("edad")["carga_viral"].mean().reset_index()

    # Gr√°fica de l√≠nea
        st.line_chart(agrupado.rename(columns={"edad": "index"}).set_index("index"))

    # Interpretaci√≥n
        st.subheader("Interpretaci√≥n")
        st.text(
        "Se observa la carga viral promedio en distintos rangos de edad.\n"
        "Esto permite identificar si hay grupos etarios con mayor riesgo o concentraci√≥n de carga viral.\n"
        "Puede ser √∫til para enfocar campa√±as de salud p√∫blica o intervenciones espec√≠ficas."
    )

    # Tabla filtrable
        st.subheader("Tabla filtrable")
        edades_unicas = sorted(df["edad"].dropna().unique())
        filtro_edad = st.selectbox("Filtrar por edad:", edades_unicas)
        tabla_filtrada_edad = df[df["edad"] == filtro_edad]
        st.dataframe(tabla_filtrada_edad)
        
    elif opcion == "Mapa ilustrativo":
        st.title("üó∫Ô∏è Mapa de Casos de VIH en M√©xico")
        st.write("Visualizaci√≥n geogr√°fica de los casos registrados con coordenadas disponibles.")

        df_mapa = df[['y_lat', 'x_long']].dropna().rename(columns={'y_lat': 'lat', 'x_long': 'lon'})
        st.map(df_mapa)

        st.subheader("Interpretaci√≥n geoespacial")
        st.write("Este mapa muestra d√≥nde se concentran los casos de VIH seg√∫n los datos disponibles.")
        st.write("La mayor√≠a est√°n en zonas urbanas, probablemente por mayor poblaci√≥n y acceso a pruebas.")
        
        #Boton para propuesta
elif menu == "Conoce nuestra propuesta":
    st.title("Propuesta de emprendimiento p√∫blico")
    st.header("La barrera invisible contra el VIH")
    
    st.subheader(
    "Pese a los avances m√©dicos, el silencio, los prejuicios y la desinformaci√≥n "
    "siguen siendo una barrera estructural que impide diagn√≥sticos tempranos, "
    "apoyo social y pol√≠ticas eficaces. Por eso deseamos crear esta propuesta "
    "de emprendimiento p√∫blico para hablarlo con naturalidad en los espacios "
    "donde las juventudes est√°n activas, y ese lugar es sin lugar a dudas las "
    "redes sociales, actualmente una v√≠a clave de intervenci√≥n p√∫blica."
)

    st.text("Haz click para conocer m√°s")
    st.subheader("Video de nuestra propuesta")
    st.video("https://youtu.be/43rEh8vDdwA?si=tRPNt46zpgazKyjU")
    